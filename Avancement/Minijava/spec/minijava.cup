package syntax;

import AST.*;
import main.OPER; /* enum des operateurs */
import main.TYPE; /* enum des types primitifs */

terminal DOT, SEP, LC, RC, LP, RP, LB, RB ;         
terminal CLASS, MAIN, PUBLIC, STATIC, VOID, STRING, SYSTEM, OUT, PRINTLN;
terminal Integer  LIT_INT;
terminal String   IDENTIFIER; 

non terminal Raxiome    axiome;     
non terminal RklassMain klassMain;    
non terminal RidKlass   idKlass;
non terminal RidVar     idVar;
non terminal Pinst      inst;
non terminal Pexpr      expr;

axiome    ::= klassMain:a {: RESULT = new Raxiome(a, new Lklass());
                             RESULT.addPos(axleft,axright);  :}
;
klassMain ::= CLASS:aa idKlass:id LC
                 PUBLIC STATIC VOID MAIN LP STRING LB RB idVar:arg RP
                        LC inst:i RC
              RC:zz
                          {: RESULT = new RklassMain(id, arg, i);
			     RESULT.addPos(aaxleft,zzxright); :}
;
inst    ::= SYSTEM:aa DOT OUT DOT PRINTLN LP expr:e RP SEP:zz
                          {: RESULT = new RIprint(e);
			     RESULT.addPos(aaxleft,zzxright); :}
;
expr    ::= LIT_INT:n     {: RESULT = new REint(n);
			     RESULT.addPos(nxleft,nxright); :}
;
idKlass ::= IDENTIFIER:id {: RESULT = new RidKlass(id);
			     RESULT.addPos(idxleft,idxright); :}
;
idVar   ::= IDENTIFIER:id {: RESULT = new RidVar(id);  
			     RESULT.addPos(idxleft,idxright); :}
;
